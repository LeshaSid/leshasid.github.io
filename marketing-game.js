// marketing-game.js
let marketingState = {
  currentDay: 1,
  budget: 800, // –°–Ω–∏–∂–µ–Ω —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±—é–¥–∂–µ—Ç —Å 1000 –¥–æ 800
  reputation: 35, // –°–Ω–∏–∂–µ–Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è —Å 40 –¥–æ 35
  followers: 40, // –°–Ω–∏–∂–µ–Ω—ã —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ —Å 50 –¥–æ 40
  satisfaction: 45, // –°–Ω–∏–∂–µ–Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Å 50 –¥–æ 45
  inflation: 0,
  skills: {
    creativity: 1,
    analytics: 1,
    communication: 1
  },
  officeLevel: 1,
  careerLevel: 1,
  client: null,
  history: [],
  activeEvent: null,
  storyProgress: {
    smallBusiness: 0,
    startup: 0,
    corporate: 0
  },
  talents: {
    digital: [],
    btl: [],
    atl: []
  },
  talentPoints: 0,
  experience: 0,
  nextLevelExp: 60, // –£–≤–µ–ª–∏—á–µ–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –æ–ø—ã—Ç—É –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
  wasWarnedOnce: false, // –§–ª–∞–≥ –¥–ª—è –±—É—Ñ–µ—Ä–Ω–æ–π –∑–æ–Ω—ã –ø—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ
  lastEvents: [] // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π (–ø—É–Ω–∫—Ç 5)
};

// –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –æ—Ñ–∏—Å–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω –≤ game-data.js)
const OFFICE_PASSIVE_INCOME = [0, 15, 40, 80]; // –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–≥–ª–∞—Å–Ω–æ game-data.js

function startMarketingGame() {
  // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
  marketingState = {
    currentDay: 1,
    budget: 800, // –°–Ω–∏–∂–µ–Ω —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±—é–¥–∂–µ—Ç
    reputation: 35, // –°–Ω–∏–∂–µ–Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è
    followers: 40, // –°–Ω–∏–∂–µ–Ω—ã —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏
    satisfaction: 45, // –°–Ω–∏–∂–µ–Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å
    inflation: 0,
    skills: {
      creativity: 1,
      analytics: 1,
      communication: 1
    },
    officeLevel: 1,
    careerLevel: 1,
    client: null,
    history: [],
    activeEvent: null,
    storyProgress: {
      smallBusiness: 0,
      startup: 0,
      corporate: 0
    },
    talents: {
      digital: [],
      btl: [],
      atl: []
    },
    talentPoints: 0,
    experience: 0,
    nextLevelExp: 60, // –£–≤–µ–ª–∏—á–µ–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –æ–ø—ã—Ç—É –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
    wasWarnedOnce: false,
    lastEvents: []
  };
  
  renderMarketingUI();
  generateClient();
  renderActions();
  updateUI();
}

function renderMarketingUI() {
  document.getElementById('marketingGame').innerHTML = `
    <div class="marketing-container">
      <div class="header">
        <div class="career-info">${marketingGameData.careerLevels[marketingState.careerLevel-1].name}</div>
        <div class="day-counter">–î–µ–Ω—å ${marketingState.currentDay}/${marketingGameData.days}</div>
        <div class="resources">
          <div class="resource budget">$${Math.floor(marketingState.budget)}</div>
          <div class="resource reputation">‚≠ê${marketingState.reputation}</div>
          <div class="resource followers">üë•${marketingState.followers}</div>
          <div class="resource satisfaction">üòä${marketingState.satisfaction}</div>
          <div class="resource experience">üìä${marketingState.experience}/${marketingState.nextLevelExp}</div>
          <div class="resource talent">üéØ${marketingState.talentPoints}</div>
        </div>
      </div>
      
      <div class="client-card">
        <div class="client-info">
          <div class="client-portrait">${marketingState.client?.name.charAt(0) || '–ö'}</div>
          <div class="client-details">
            <h3>${marketingState.client?.name || '–ö–ª–∏–µ–Ω—Ç'}</h3>
            <p>${marketingState.client?.description || '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'}</p>
            <div class="client-type ${marketingState.client?.type || ''}">
              ${marketingState.client?.type === 'small' ? 'üè™ –ú–∞–ª—ã–π –±–∏–∑–Ω–µ—Å' : 
                marketingState.client?.type === 'startup' ? 'üöÄ –°—Ç–∞—Ä—Ç–∞–ø' : 
                'üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è'}
            </div>
          </div>
        </div>
        <div class="client-request">
          <p>"${marketingState.client?.currentRequest || '–ó–∞–≥—Ä—É–∑–∫–∞...'}"</p>
        </div>
        <div class="satisfaction-bar">
          <div class="satisfaction-fill" style="width: ${Math.min(100, marketingState.client?.satisfaction || 0)}%"></div>
        </div>
      </div>
      
      <div class="actions-container" id="actionsContainer"></div>
      
      <div class="progress-container">
        <div class="progress-section">
          <h3>–ü—Ä–æ–≥—Ä–µ—Å—Å —Å—é–∂–µ—Ç–∞</h3>
          <div class="progress-bars">
            <div class="progress-bar">
              <div class="progress-label">–ú–∞–ª—ã–π –±–∏–∑–Ω–µ—Å</div>
              <div class="progress-track"><div class="progress-fill" style="width: ${marketingState.storyProgress.smallBusiness}%"></div></div>
              <div class="progress-value">${marketingState.storyProgress.smallBusiness}%</div>
            </div>
            <div class="progress-bar">
              <div class="progress-label">–°—Ç–∞—Ä—Ç–∞–ø—ã</div>
              <div class="progress-track"><div class="progress-fill" style="width: ${marketingState.storyProgress.startup}%"></div></div>
              <div class="progress-value">${marketingState.storyProgress.startup}%</div>
            </div>
            <div class="progress-bar">
              <div class="progress-label">–ö–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏</div>
              <div class="progress-track"><div class="progress-fill" style="width: ${marketingState.storyProgress.corporate}%"></div></div>
              <div class="progress-value">${marketingState.storyProgress.corporate}%</div>
            </div>
          </div>
        </div>
        
        <div class="progress-section">
          <h3>–ù–∞–≤—ã–∫–∏</h3>
          <div class="skills-grid">
            <div class="skill">
              <div class="skill-name">–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å</div>
              <div class="skill-level">${marketingState.skills.creativity}/5</div>
              <div class="skill-bar"><div style="width: ${marketingState.skills.creativity*20}%"></div></div>
            </div>
            <div class="skill">
              <div class="skill-name">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
              <div class="skill-level">${marketingState.skills.analytics}/5</div>
              <div class="skill-bar"><div style="width: ${marketingState.skills.analytics*20}%"></div></div>
            </div>
            <div class="skill">
              <div class="skill-name">–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è</div>
              <div class="skill-level">${marketingState.skills.communication}/5</div>
              <div class="skill-bar"><div style="width: ${marketingState.skills.communication*20}%"></div></div>
            </div>
          </div>
        </div>
      </div>
      
      <div class="office-view">
        <div class="office-image" style="background-image: url('office-${marketingState.officeLevel}.jpg')"></div>
        <div class="office-info">
          <h3>${marketingGameData.officeLevels[marketingState.officeLevel-1].name}</h3>
          <p>${marketingGameData.officeLevels[marketingState.officeLevel-1].description}</p>
          <div id="officeUpgradeButtonContainer">
            ${marketingState.officeLevel < 3 ? 
              `<button class="btn" onclick="upgradeOffice()">–£–ª—É—á—à–∏—Ç—å ($${marketingGameData.officeLevels[marketingState.officeLevel].cost})</button>` : 
              '<div class="max-level">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å</div>'}
          </div>
        </div>
      </div>
      
      <div class="talent-tree-section">
        <h3>–î–µ—Ä–µ–≤–æ —Ç–∞–ª–∞–Ω—Ç–æ–≤</h3>
        <p>–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã: ${marketingState.talents.digital.length + marketingState.talents.btl.length + marketingState.talents.atl.length}</p>
        <button class="btn" onclick="openTalentTree()">–û—Ç–∫—Ä—ã—Ç—å —Ç–∞–ª–∞–Ω—Ç—ã</button>
      </div>
      
      <div class="event-notice" id="eventNotice"></div>
    </div>
    
    <div id="talentModal" class="modal" style="display:none">
      <div class="modal-content">
        <span class="close" onclick="closeTalentModal()">&times;</span>
        <h2>–î–µ—Ä–µ–≤–æ —Ç–∞–ª–∞–Ω—Ç–æ–≤</h2>
        <p>–û—á–∫–æ–≤ —Ç–∞–ª–∞–Ω—Ç–æ–≤: <span id="talentPoints">${marketingState.talentPoints}</span></p>
        <div class="talent-tree">
          <div class="talent-branch">
            <h3>Digital</h3>
            ${renderTalentBranch('digital')}
          </div>
          <div class="talent-branch">
            <h3>BTL</h3>
            ${renderTalentBranch('btl')}
          </div>
          <div class="talent-branch">
            <h3>ATL</h3>
            ${renderTalentBranch('atl')}
          </div>
        </div>
      </div>
    </div>
  `;
}

function renderTalentBranch(branch) {
  let html = '';
  marketingGameData.talentTree[branch].forEach(talent => {
    const isPurchased = marketingState.talents[branch].includes(talent.id);
    const requiresPurchased = talent.requires.length === 0 || talent.requires.every(reqId => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–ª–∞–Ω—Ç–∞ –≤–æ –≤—Å–µ—Ö –≤–µ—Ç–∫–∞—Ö
        return marketingState.talents.digital.includes(reqId) ||
               marketingState.talents.btl.includes(reqId) ||
               marketingState.talents.atl.includes(reqId);
    });
    const canPurchase = !isPurchased && 
      marketingState.talentPoints >= talent.cost &&
      requiresPurchased;
    
    html += `
      <div class="talent ${isPurchased ? 'purchased' : ''} ${!requiresPurchased ? 'locked' : ''} ${canPurchase ? 'can-purchase' : ''}" 
           onclick="${canPurchase ? `purchaseTalent('${branch}', ${talent.id})` : ''}"
           title="${talent.effect}">
        <div class="talent-icon">${isPurchased ? '‚úì' : talent.cost}</div>
        <div class="talent-details">
          <h4>${talent.name}</h4>
          <p>${talent.effect}</p>
        </div>
      </div>
    `;
  });
  return html;
}


function openTalentTree() {
  document.getElementById('talentModal').style.display = 'block';
  // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –¥–µ—Ä–µ–≤–æ —Ç–∞–ª–∞–Ω—Ç–æ–≤ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
  document.querySelector('.talent-tree').innerHTML = `
      <div class="talent-branch">
        <h3>Digital</h3>
        ${renderTalentBranch('digital')}
      </div>
      <div class="talent-branch">
        <h3>BTL</h3>
        ${renderTalentBranch('btl')}
      </div>
      <div class="talent-branch">
        <h3>ATL</h3>
        ${renderTalentBranch('atl')}
      </div>
  `;
}

function closeTalentModal() {
  document.getElementById('talentModal').style.display = 'none';
}

function purchaseTalent(branch, talentId) {
  const talent = marketingGameData.talentTree[branch].find(t => t.id === talentId);
  
  if (talent && marketingState.talentPoints >= talent.cost && !marketingState.talents[branch].includes(talentId)) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ç–∞–ª–∞–Ω—Ç–æ–≤
    const requiresPurchased = talent.requires.length === 0 || talent.requires.every(reqId => 
        marketingState.talents.digital.includes(reqId) ||
        marketingState.talents.btl.includes(reqId) ||
        marketingState.talents.atl.includes(reqId)
    );

    if (!requiresPurchased) {
        showNotification(`–î–ª—è —ç—Ç–æ–≥–æ —Ç–∞–ª–∞–Ω—Ç–∞ —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ç–∞–ª–∞–Ω—Ç—ã!`, "error");
        return;
    }

    marketingState.talentPoints -= talent.cost;
    marketingState.talents[branch].push(talentId);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
    openTalentTree(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    document.getElementById('talentPoints').textContent = marketingState.talentPoints; // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—á–∫–æ–≤
    document.querySelector('.talent-tree-section p').textContent = 
      `–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã: ${marketingState.talents.digital.length + marketingState.talents.btl.length + marketingState.talents.atl.length}`;
    
    showNotification(`–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω —Ç–∞–ª–∞–Ω—Ç: ${talent.name}`, "success");
    updateUI(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π UI
  } else if (marketingState.talents[branch].includes(talentId)) {
      showNotification(`–¢–∞–ª–∞–Ω—Ç "${talent.name}" —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω!`, "info");
  } else {
      showNotification(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤ –¥–ª—è —Ç–∞–ª–∞–Ω—Ç–∞: ${talent.name}`, "error");
  }
}

function generateClient() {
  const client = {...marketingGameData.clients[
    Math.floor(Math.random() * marketingGameData.clients.length)
  ]};
  
  // –í—ã–±–∏—Ä–∞–µ–º –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–∏–ø—É –∫–ª–∏–µ–Ω—Ç–∞
  let availableRequests = marketingGameData.clientRequests.filter(request => 
    request.keywords.some(keyword => client.preferences.includes(keyword))
  );

  // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π
  if (availableRequests.length === 0) {
    availableRequests = marketingGameData.clientRequests;
  }

  const request = availableRequests[
    Math.floor(Math.random() * availableRequests.length)
  ];
  client.currentRequest = request.text;
  client.satisfaction = 50;
  
  marketingState.client = client;
}

function renderActions() {
  const container = document.getElementById('actionsContainer');
  if (!container) return;
  
  container.innerHTML = '';
  
  marketingGameData.marketingActions.forEach(action => {
    let actualCost = Math.floor(action.baseCost * (1 + marketingState.inflation));
    
    // –ë–æ–Ω—É—Å –æ—Ç –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å
    if (action.communicable) {
      actualCost = Math.floor(actualCost * (1 - marketingState.skills.communication * 0.05));
    }
    
    const actionEl = document.createElement('div');
    actionEl.className = 'marketing-action';
    actionEl.innerHTML = `
      <div class="action-header">
        <div class="action-name">${action.name}</div>
        <div class="action-cost">$${actualCost}</div>
      </div>
      <div class="action-effect">${action.effectDescription}</div>
      ${marketingState.inflation > 0.01 ? `<div class="inflation">+${Math.floor(marketingState.inflation*100)}%</div>` : ''}
      ${action.creative ? `<div class="creative-bonus">–ö—Ä–µ–∞—Ç–∏–≤ +${marketingState.skills.creativity * 10}%</div>` : ''}
      ${action.analytical ? `<div class="analytics-bonus">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ +${marketingState.skills.analytics * 5}%</div>` : ''}
    `;
    actionEl.onclick = () => selectAction(action.id, actualCost);
    container.appendChild(actionEl);
  });
}

function selectAction(actionId, cost) {
  if (marketingState.budget < cost) {
    showNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—é–¥–∂–µ—Ç–∞!", "error");
    return;
  }
  
  const action = marketingGameData.marketingActions.find(a => a.id === actionId);
  if (!action) return;
  
  marketingState.budget -= cost;
  
  // --- –†–∞—Å—á–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –±–æ–Ω—É—Å–æ–≤ ---
  let match = 0;
  const clientKeywords = marketingState.client.preferences;
  const actionKeywords = action.keywords;

  // –ë–∞–∑–æ–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
  actionKeywords.forEach(actionKw => {
    if (clientKeywords.includes(actionKw)) {
      match += 20; // –£–≤–µ–ª–∏—á–µ–Ω –≤–µ—Å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    }
  });

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –æ—Ç –Ω–∞–≤—ã–∫–æ–≤
  if (action.creative) match += marketingState.skills.creativity * 10; // –£–≤–µ–ª–∏—á–µ–Ω–æ –≤–ª–∏—è–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
  if (action.analytical) match += marketingState.skills.analytics * 7; // –£–≤–µ–ª–∏—á–µ–Ω–æ –≤–ª–∏—è–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  if (action.communicable) match += marketingState.skills.communication * 7; // –£–≤–µ–ª–∏—á–µ–Ω–æ –≤–ª–∏—è–Ω–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏

  match += Math.floor(Math.random() * 20); // –≠–ª–µ–º–µ–Ω—Ç —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏
  match = Math.min(100, Math.max(0, match)); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç 0 –¥–æ 100

  let effectValue = action.baseValue;
  
  // –ë–æ–Ω—É—Å –æ—Ç —É—Ä–æ–≤–Ω—è –∫–∞—Ä—å–µ—Ä—ã
  effectValue *= marketingGameData.careerLevels[marketingState.careerLevel-1].incomeMultiplier;

  // --- –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ —Ç–∞–ª–∞–Ω—Ç–æ–≤ ---
  let talentBonus = 1.0;
  if (action.type === 'digital' && marketingState.talents.digital.includes(1)) talentBonus += 0.15; // –¢–∞—Ä–≥–µ—Ç. —Ä–µ–∫–ª–∞–º–∞
  if (action.type === 'atl' && marketingState.talents.atl.includes(7)) talentBonus += 0.15; // –ú–µ–¥–∏–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
  if (action.type === 'btl' && marketingState.talents.btl.includes(5)) talentBonus += 0.30; // –ü—Ä–æ–º–æ-–∞–∫—Ü–∏–∏ (–¥–ª—è –æ—Ö–≤–∞—Ç–∞ BTL)
  
  if (action.effect.includes('followers') && marketingState.talents.digital.includes(2)) talentBonus += 0.25; // SMM
  if (action.effect.includes('reputation') && marketingState.talents.atl.includes(9)) talentBonus += 0.30; // –ë—Ä–µ–Ω–¥-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç
  if (action.effect.includes('reputation') && action.type === 'btl' && marketingState.talents.btl.includes(6)) talentBonus += 0.25; // –ú–µ—Ä—á–∞–Ω–¥–∞–π–∑–∏–Ω–≥
  if (action.effect.includes('satisfaction') && marketingState.talents.btl.includes(4)) talentBonus += 0.20; // –ò–≤–µ–Ω—Ç—ã

  effectValue *= talentBonus;
  
  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –¥–µ–π—Å—Ç–≤–∏—è
  if (action.effect === 'followers') {
    marketingState.followers += Math.floor(effectValue * (match / 100));
  } else if (action.effect === 'reputation') {
    marketingState.reputation += Math.floor(effectValue * (match / 100));
  } else if (action.effect === 'satisfaction') {
    marketingState.satisfaction += Math.floor(effectValue * (match / 100));
  } else if (action.effect === 'both') {
    marketingState.followers += Math.floor(effectValue * 0.6 * (match / 100));
    marketingState.reputation += Math.floor(effectValue * 0.4 * (match / 100));
  } else if (action.effect === 'knowledge') { // –ù–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è "–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞"
    marketingState.skills.analytics = Math.min(5, marketingState.skills.analytics + action.baseValue);
    showNotification(`–ù–∞–≤—ã–∫ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞" —É–ª—É—á—à–µ–Ω!`, "info");
  }

  // –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ —Ä–∞—Å—Ç–µ—Ç –æ—Ç —É—Å–ø–µ—à–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
  let clientSatisfactionGain = 0;
  if (match >= 75) {
      clientSatisfactionGain = 10; // –°–Ω–∏–∂–µ–Ω–∞ –ø—Ä–∏–±–∞–≤–∫–∞
  } else if (match >= 50) {
      clientSatisfactionGain = 5; // –°–Ω–∏–∂–µ–Ω–∞ –ø—Ä–∏–±–∞–≤–∫–∞
  } else if (match >= 30) {
      clientSatisfactionGain = 2; // –°–Ω–∏–∂–µ–Ω–∞ –ø—Ä–∏–±–∞–≤–∫–∞
  } else {
      clientSatisfactionGain = -25; // –£–≤–µ–ª–∏—á–µ–Ω —à—Ç—Ä–∞—Ñ
  }
  marketingState.client.satisfaction += clientSatisfactionGain;

  // –û–ø—ã—Ç –∏ —É—Ä–æ–≤–Ω–∏
  let expGain = 12 + Math.floor(match / 6); // –°–Ω–∏–∂–µ–Ω –ø—Ä–∏—Ä–æ—Å—Ç –æ–ø—ã—Ç–∞
  marketingState.experience += expGain;
  
  while (marketingState.experience >= marketingState.nextLevelExp) {
    marketingState.talentPoints += 1;
    marketingState.experience -= marketingState.nextLevelExp;
    marketingState.nextLevelExp = Math.round(marketingState.nextLevelExp * 1.7); // –£—Å–∫–æ—Ä–µ–Ω —Ä–æ—Å—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ –æ–ø—ã—Ç—É
    showNotification(`–ü–æ–ª—É—á–µ–Ω–æ –æ—á–∫–æ —Ç–∞–ª–∞–Ω—Ç–∞! –í—Å–µ–≥–æ: ${marketingState.talentPoints}`, "success");
    openTalentTree(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ä–µ–≤–æ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—á–∫–∞
  }
  
  // –û–ø–ª–∞—Ç–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
  if (match >= 50) {
    const paymentMultiplier = 0.7 + (marketingState.client.satisfaction / 100) * 0.6; // –û—Ç 0.7 –¥–æ 1.3 –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
    let payment = Math.floor(marketingState.client.payment * paymentMultiplier);

    // –ë–æ–Ω—É—Å –æ—Ç —Ç–∞–ª–∞–Ω—Ç–∞ "Performance –º–∞—Ä–∫–µ—Ç–∏–Ω–≥"
    if (marketingState.talents.digital.includes(3)) {
        payment *= 1.20; // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –Ω–∞ 20%
    }
    marketingState.budget += payment;
    showNotification(`–ö–ª–∏–µ–Ω—Ç –¥–æ–≤–æ–ª–µ–Ω –∏ –æ–ø–ª–∞—Ç–∏–ª —Ä–∞–±–æ—Ç—É: $${Math.floor(payment)}`, "success");
  } else if (match < 30) {
     showNotification(`–ö–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ–≤–æ–ª–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º. –û–ø–ª–∞—Ç—ã –Ω–µ –±—É–¥–µ—Ç.`, "error");
  }
  
  // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
  marketingState.followers = Math.max(0, marketingState.followers);
  marketingState.reputation = Math.max(0, Math.min(100, marketingState.reputation));
  marketingState.satisfaction = Math.max(0, Math.min(100, marketingState.satisfaction));
  marketingState.client.satisfaction = Math.max(0, Math.min(100, marketingState.client.satisfaction));
  
  // –ü—Ä–æ–≥—Ä–µ—Å—Å —Å—é–∂–µ—Ç–∞
  const progressIncrease = Math.floor(match / 15); // –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —Å–Ω–∏–∂–µ–Ω
  if (marketingState.client.type === 'small') {
    marketingState.storyProgress.smallBusiness = Math.min(100, marketingState.storyProgress.smallBusiness + progressIncrease);
  } else if (marketingState.client.type === 'startup') {
    marketingState.storyProgress.startup = Math.min(100, marketingState.storyProgress.startup + progressIncrease);
  } else {
    marketingState.storyProgress.corporate = Math.min(100, marketingState.storyProgress.corporate + progressIncrease);
  }
  
  checkCareerProgress();
  
  showNotification(`–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${match}%`, match >= 65 ? "success" : match >= 40 ? "info" : "error");
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é
  setTimeout(() => {
    endDay();
  }, 1800);
  
  updateUI();
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π
 * –∏ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.
 */
function getWeightedRandomEvent() {
  const allEvents = marketingGameData.events;
  const negativeEvents = allEvents.filter(e => (e.effect === "reputation" && e.value < 0) || e.type === "inflation" || e.type === "crisis" || e.type === "scandal");
  const positiveEvents = allEvents.filter(e => e.effect === "budget" || e.effect === "followers" || e.effect === "skill" || e.type === "boom" || e.type === "viral" || e.type === "investment");
  const neutralEvents = allEvents.filter(e => e.severity === "low" && e.effect !== "budget" && e.effect !== "followers" && e.effect !== "reputation"); // Events that are skill bonuses

  let availableEvents = [...allEvents];

  // –ü—É–Ω–∫—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
  // –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Å–æ–±—ã—Ç–∏—è –±—ã–ª–∏ —à—Ç—Ä–∞—Ñ–Ω—ã–º–∏, –ø–æ–≤—ã—à–∞–µ–º —à–∞–Ω—Å –Ω–∞ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ/–ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ
  const lastTwoNegative = marketingState.lastEvents.length >= 2 &&
                          marketingState.lastEvents.every(e => e.value < 0 || e.type === "inflation" || e.type === "crisis" || e.type === "scandal");

  if (lastTwoNegative) {
    // –í—Ä–µ–º–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—É–ª —Å–æ–±—ã—Ç–∏–π, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –±–æ–ª—å—à–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö/–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã—Ö
    availableEvents = [...positiveEvents, ...neutralEvents, ...positiveEvents]; // –£–¥–≤–∞–∏–≤–∞–µ–º –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –≤–µ—Å–∞
    showNotification("–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π. –®–∞–Ω—Å –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ —É–≤–µ–ª–∏—á–µ–Ω!", "info");
  }

  // –ü—É–Ω–∫—Ç 7: –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –∫—Ä–∏–≤–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  // –í –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã (–¥–æ 5 –¥–Ω—è) –∏—Å–∫–ª—é—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è —Å –≤—ã—Å–æ–∫–æ–π "severity"
  const minDayForHarshEvents = 8; // –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 8 –¥–Ω—è
  if (marketingState.currentDay < minDayForHarshEvents) {
    availableEvents = availableEvents.filter(e => e.severity !== "high");
  }

  // –ï—Å–ª–∏ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑ –≤—Å–µ—Ö, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫
  if (availableEvents.length === 0) {
    return allEvents[Math.floor(Math.random() * allEvents.length)];
  }

  return availableEvents[Math.floor(Math.random() * availableEvents.length)];
}


function endDay() {
    marketingState.currentDay++;

    // –ü—É–Ω–∫—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –ø—Ä–æ–∏–≥—Ä—ã—à–∞ - –±—É—Ñ–µ—Ä–Ω–∞—è –∑–æ–Ω–∞
    if (marketingState.budget <= 0) {
        if (!marketingState.wasWarnedOnce) {
            marketingState.budget = 30; // –£–º–µ–Ω—å—à–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±—É—Ñ–µ—Ä
            marketingState.wasWarnedOnce = true;
            showNotification("–ë—é–¥–∂–µ—Ç –Ω–∞ –∏—Å—Ö–æ–¥–µ! –í–∞–º –¥–∞–Ω –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–ø–∞—Å, –Ω–æ –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã!", "error");
        } else {
            completeMarketingGame(false); // –ü—Ä–æ–∏–≥—Ä—ã—à
            return;
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã
    if (marketingState.currentDay > marketingGameData.days) {
      completeMarketingGame(true); // –ü–æ–±–µ–¥–∞
      return;
    }

    // –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –æ—Ñ–∏—Å–∞
    const dailyIncome = marketingGameData.officeLevels[marketingState.officeLevel-1].cost > 0 ? OFFICE_PASSIVE_INCOME[marketingState.officeLevel-1] : 0;
    if (dailyIncome > 0) {
        marketingState.budget += dailyIncome;
        showNotification(`–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –æ—Ñ–∏—Å–∞: +$${dailyIncome}`, "info");
    }

    // –ò–Ω—Ñ–ª—è—Ü–∏—è (—Ä–∞–∑ –≤ 2 –¥–Ω—è)
    if (marketingState.currentDay % 2 === 0) { // –ò–Ω—Ñ–ª—è—Ü–∏—è —á–∞—â–µ
      marketingState.inflation = Math.min(0.7, marketingState.inflation + 0.07); // –£–≤–µ–ª–∏—á–µ–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ñ–ª—è—Ü–∏–∏, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–ª—è—Ü–∏—è 70%
      showEvent({ 
        type: "inflation", 
        text: `–†—ã–Ω–æ—á–Ω—ã–µ –∫–æ–ª–µ–±–∞–Ω–∏—è! –ò–Ω—Ñ–ª—è—Ü–∏—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥—Ä–æ—Å–ª–∞. –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–ª—è—Ü–∏—è: ${Math.floor(marketingState.inflation*100)}%`,
        value: marketingState.inflation, // –î–æ–±–∞–≤–ª—è–µ–º value –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤ lastEvents
        effect: "inflation"
      });
    }
    
    // –°–ª—É—á–∞–π–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
    if (Math.random() < 0.55) { // –£–≤–µ–ª–∏—á–µ–Ω–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è
      const event = getWeightedRandomEvent(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–æ–±—ã—Ç–∏—è
      applyEvent(event);
      showEvent(event);

      // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π
      marketingState.lastEvents.push({ type: event.type, value: event.value });
      if (marketingState.lastEvents.length > 2) { // –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Å–æ–±—ã—Ç–∏—è
        marketingState.lastEvents.shift();
      }
    } else {
        // –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏—è –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –æ—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–ª–∏—Å—å "–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ" —Ñ–ª–∞–≥–∏
        marketingState.lastEvents = [];
    }
    
    generateClient();
    updateUI();
}


function checkCareerProgress() {
  const currentLevel = marketingGameData.careerLevels[marketingState.careerLevel-1];
  const nextLevel = marketingGameData.careerLevels[marketingState.careerLevel];
  
  if (nextLevel && 
      marketingState.reputation >= nextLevel.requirements.reputation && 
      marketingState.followers >= nextLevel.requirements.followers) {
    marketingState.careerLevel++;
    showNotification(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ –¥–æ ${nextLevel.name}`, "success");
  }
}

function upgradeOffice() {
  const nextLevel = marketingGameData.officeLevels[marketingState.officeLevel];
  if (!nextLevel) return;
  
  if (marketingState.budget >= nextLevel.cost) {
    marketingState.budget -= nextLevel.cost;
    marketingState.officeLevel++;
    showNotification(`–û—Ñ–∏—Å —É–ª—É—á—à–µ–Ω –¥–æ —É—Ä–æ–≤–Ω—è: ${nextLevel.name}!`, "success");
    updateUI();
  } else {
    showNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –æ—Ñ–∏—Å–∞", "error");
  }
}

function applyEvent(event) {
  marketingState.activeEvent = event;
  
  switch(event.effect) {
    case "inflation": // –ò–Ω—Ñ–ª—è—Ü–∏—è —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∫ –ø—Ä—è–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      marketingState.inflation = Math.min(0.7, marketingState.inflation + event.value); // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–ª—è—Ü–∏—è 70%
      break;
    case "budget":
      // –ü—É–Ω–∫—Ç 2: –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å —Ä–µ–∑–∫–∏–µ "–ø—Ä–æ–≤–∞–ª—ã" –¥–ª—è –±—é–¥–∂–µ—Ç–∞
      if (event.value < 0) { // –ï—Å–ª–∏ —ç—Ç–æ —à—Ç—Ä–∞—Ñ
        const maxLoss = marketingState.budget * 0.4; // –£–≤–µ–ª–∏—á–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —à—Ç—Ä–∞—Ñ –¥–æ 40%
        event.value = Math.max(event.value, -maxLoss); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —à—Ç—Ä–∞—Ñ
      }
      marketingState.budget += event.value;
      break;
    case "reputation":
      // –ü—É–Ω–∫—Ç 2: –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å —Ä–µ–∑–∫–∏–µ "–ø—Ä–æ–≤–∞–ª—ã" –¥–ª—è —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
      if (event.value < 0) { // –ï—Å–ª–∏ —ç—Ç–æ —à—Ç—Ä–∞—Ñ
        const maxLoss = marketingState.reputation * 0.4; // –£–≤–µ–ª–∏—á–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —à—Ç—Ä–∞—Ñ –¥–æ 40%
        event.value = Math.max(event.value, -maxLoss); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —à—Ç—Ä–∞—Ñ
      }
      marketingState.reputation = Math.min(100, marketingState.reputation + event.value);
      break;
    case "followers":
      marketingState.followers += event.value;
      break;
    case "skill":
      if (event.value === "creativity" && marketingState.skills.creativity < 5) {
        marketingState.skills.creativity++;
        showNotification(`–ù–∞–≤—ã–∫ "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å" —É–ª—É—á—à–µ–Ω!`, "info");
      } else if (event.value === "analytics" && marketingState.skills.analytics < 5) {
        marketingState.skills.analytics++;
        showNotification(`–ù–∞–≤—ã–∫ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞" —É–ª—É—á—à–µ–Ω!`, "info");
      } else if (event.value === "communication" && marketingState.skills.communication < 5) {
        marketingState.skills.communication++;
        showNotification(`–ù–∞–≤—ã–∫ "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è" —É–ª—É—á—à–µ–Ω!`, "info");
      }
      break;
  }
}

function showEvent(event) {
  const container = document.getElementById('eventNotice');
  if (!container) return;
  
  container.innerHTML = `
    <div class="event ${event.type}">
      ${event.text}
    </div>
  `;
  
  setTimeout(() => {
    container.innerHTML = '';
  }, 3500);
}

function showNotification(text, type = "info") {
  const notification = document.createElement('div');
  notification.className = `notification ${type}`;
  notification.textContent = text;
  document.body.appendChild(notification);
  
  setTimeout(() => {
    notification.remove();
  }, 2500);
}

function updateUI() {
    if (!document.querySelector('.day-counter')) return; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ UI –∏–≥—Ä—ã
    
    document.querySelector('.day-counter').textContent = `–î–µ–Ω—å ${marketingState.currentDay}/${marketingGameData.days}`;
    document.querySelector('.budget').textContent = `$${Math.floor(marketingState.budget)}`;
    document.querySelector('.reputation').textContent = `‚≠ê${marketingState.reputation}`;
    document.querySelector('.followers').textContent = `üë•${marketingState.followers}`;
    document.querySelector('.satisfaction').textContent = `üòä${marketingState.satisfaction}`;
    document.querySelector('.experience').textContent = `üìä${marketingState.experience}/${marketingState.nextLevelExp}`;
    document.querySelector('.talent').textContent = `üéØ${marketingState.talentPoints}`;
    
    if (marketingState.client) {
      document.querySelector('.client-details h3').textContent = marketingState.client.name;
      document.querySelector('.client-details p').textContent = marketingState.client.description;
      document.querySelector('.client-request p').textContent = `"${marketingState.client.currentRequest}"`;
      document.querySelector('.client-portrait').textContent = marketingState.client.name.charAt(0);
      
      const typeElement = document.querySelector('.client-type');
      if (typeElement) {
        typeElement.className = `client-type ${marketingState.client.type}`;
        typeElement.textContent = 
          marketingState.client.type === 'small' ? 'üè™ –ú–∞–ª—ã–π –±–∏–∑–Ω–µ—Å' : 
          marketingState.client.type === 'startup' ? 'üöÄ –°—Ç–∞—Ä—Ç–∞–ø' : 'üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è';
      }
      
      const satisfactionFill = document.querySelector('.satisfaction-fill');
      if (satisfactionFill) {
        satisfactionFill.style.width = `${Math.min(100, marketingState.client.satisfaction)}%`;
      }
    }
    
    document.querySelectorAll('.progress-fill')[0].style.width = `${marketingState.storyProgress.smallBusiness}%`;
    document.querySelectorAll('.progress-fill')[1].style.width = `${marketingState.storyProgress.startup}%`;
    document.querySelectorAll('.progress-fill')[2].style.width = `${marketingState.storyProgress.corporate}%`;
    document.querySelectorAll('.progress-value')[0].textContent = `${marketingState.storyProgress.smallBusiness}%`;
    document.querySelectorAll('.progress-value')[1].textContent = `${marketingState.storyProgress.startup}%`;
    document.querySelectorAll('.progress-value')[2].textContent = `${marketingState.storyProgress.corporate}%`;
    
    document.querySelectorAll('.skill-level')[0].textContent = `${marketingState.skills.creativity}/5`;
    document.querySelectorAll('.skill-level')[1].textContent = `${marketingState.skills.analytics}/5`;
    document.querySelectorAll('.skill-level')[2].textContent = `${marketingState.skills.communication}/5`;
    document.querySelectorAll('.skill-bar > div')[0].style.width = `${marketingState.skills.creativity*20}%`;
    document.querySelectorAll('.skill-bar > div')[1].style.width = `${marketingState.skills.analytics*20}%`;
    document.querySelectorAll('.skill-bar > div')[2].style.width = `${marketingState.skills.communication*20}%`;
    
    document.querySelector('.career-info').textContent = marketingGameData.careerLevels[marketingState.careerLevel-1].name;
    
    document.querySelector('.office-info h3').textContent = marketingGameData.officeLevels[marketingState.officeLevel-1].name;
    document.querySelector('.office-info p').textContent = marketingGameData.officeLevels[marketingState.officeLevel-1].description;
    document.querySelector('.office-image').style.backgroundImage = `url('office-${marketingState.officeLevel}.jpg')`;

    const upgradeButtonContainer = document.getElementById('officeUpgradeButtonContainer');
    let upgradeButton = upgradeButtonContainer.querySelector('button');
    let maxLevelDiv = upgradeButtonContainer.querySelector('.max-level');

    if (marketingState.officeLevel < marketingGameData.officeLevels.length) {
        if (maxLevelDiv) {
            maxLevelDiv.remove();
            maxLevelDiv = null;
        }
        if (!upgradeButton) {
            upgradeButton = document.createElement('button');
            upgradeButton.className = 'btn';
            upgradeButton.onclick = upgradeOffice;
            upgradeButtonContainer.appendChild(upgradeButton);
        }
        upgradeButton.style.display = 'block';
        upgradeButton.textContent = `–£–ª—É—á—à–∏—Ç—å ($${marketingGameData.officeLevels[marketingState.officeLevel].cost})`;
    } else {
        if (upgradeButton) upgradeButton.style.display = 'none';
        if (!maxLevelDiv) {
            maxLevelDiv = document.createElement('div');
            maxLevelDiv.className = 'max-level';
            maxLevelDiv.textContent = '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å';
            upgradeButtonContainer.appendChild(maxLevelDiv);
        }
    }
  
  renderActions();
}

/**
 * –ó–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É "–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥".
 * @param {boolean} win - True, –µ—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–±–µ–¥–æ–π, false - –µ—Å–ª–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ–º.
 */
function completeMarketingGame(win) {
  gamesCompleted.marketing = true; // –û—Ç–º–µ—á–∞–µ–º –∏–≥—Ä—É –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—É—é
  const marketingGameDiv = document.getElementById('marketingGame');
  if (!marketingGameDiv) return;

  if (win) {
    marketingGameDiv.innerHTML = `
      <div class="ending-screen" style="display:block; text-align:center; padding: 40px;">
          <h2>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
          <p>–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫–∞—Ä—å–µ—Ä—É –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∞, –¥–æ—Å—Ç–∏–≥–Ω—É–≤ –≤–µ—Ä—à–∏–Ω—ã!</p>
          <p>–í–∞—à –∏—Ç–æ–≥–æ–≤—ã–π —Å—á–µ—Ç:</p>
          <p>–ë—é–¥–∂–µ—Ç: $${Math.floor(marketingState.budget)}</p>
          <p>–†–µ–ø—É—Ç–∞—Ü–∏—è: ${marketingState.reputation}</p>
          <p>–ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${marketingState.followers}</p>
          <button class="btn" onclick="navButtons.memory.click()">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</button>
      </div>
    `;
    showBoxAnimation(1); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–µ—Ä–≤–æ–π –∫–æ—Ä–æ–±–∫–∏
  } else {
    marketingGameDiv.innerHTML = `
      <div class="ending-screen" style="display:block; text-align:center; padding: 40px;">
          <h2>–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!</h2>
          <p>–í—ã –Ω–µ —Å–º–æ–≥–ª–∏ —É–¥–µ—Ä–∂–∞—Ç—å —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –Ω–∞ –ø–ª–∞–≤—É.</p>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å —É—Å–ø–µ—Ö–∞!</p>
          <button class="btn" onclick="startMarketingGame()">–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ</button>
      </div>
    `;
  }
}

